@model StudentRegistrationSystem.Models.Student

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "Students", FormMethod.Post,
            new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card">
            <div class="card-header text-white bg-primary" style="padding:30px;">
                <h3 class="card-title">Student Registration Form</h3>
            </div>
            <div class="card-body row formpanel">
                <div class="col-md-6">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <input type="file" name="photoFile" class="form-control inputTheme" />
                            @Html.ValidationMessageFor(model => model.photo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "First Name" } })
                            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.fatherName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.fatherName, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "Father's Name" } })
                            @Html.ValidationMessageFor(model => model.fatherName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.grandFatherName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.grandFatherName, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "Grand Father's Name" } })
                            @Html.ValidationMessageFor(model => model.grandFatherName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "Age" } })
                            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.gender, new SelectList(
                            new List<object> {
                                new {value="Male", text="Male"},
                                new {value="Female", text="Female"}
                                }, "value", "text"),
                                "Select Gender",
                                new { @class = "form-control inputTheme" })
                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.bio, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.bio, 5, 40, new { @class = "form-control", @placeholder = "Student Bio..." } )
                            @Html.ValidationMessageFor(model => model.bio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="col-md-6">

                    <div class="form-group row">
                        @Html.LabelFor(model => model.region, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.region, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "Region" } })
                            @Html.ValidationMessageFor(model => model.region, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "City" } })
                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.subcity, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.subcity, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "Sub-City" } })
                            @Html.ValidationMessageFor(model => model.subcity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.woreda, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.woreda, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "Woreda" } })
                            @Html.ValidationMessageFor(model => model.woreda, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.houseNo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.houseNo, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "House No." } })
                            @Html.ValidationMessageFor(model => model.houseNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.phoneNo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.phoneNo, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "Phone No." } })
                            @Html.ValidationMessageFor(model => model.phoneNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control inputTheme", @placeholder = "Emal" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Register" class="btn btn-primary" />
                    </div>
                </div>

            </div>

            
        </div>
        

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
